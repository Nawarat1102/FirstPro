import pandas as pd
import numpy as np
import streamlit as st
import seaborn as sns
from sklearn.naive_bayes import GaussianNB

st.title('‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Naive Bayes')

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
dt = pd.read_csv("./data/Diabetes.csv")
# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
dt = dt.replace({
    'Yes': 1, 'No': 0,
    'Male': 1, 'Female': 0,
    'Positive': 1, 'Negative': 0
})

# ‡∏ß‡∏≤‡∏î pairplot
if st.checkbox("‡πÅ‡∏™‡∏î‡∏á Pairplot (‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢)"):
    st.write("### üå∫ Pairplot: ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    fig2 = sns.pairplot(dt, hue='class')
    st.pyplot(fig2)

html_8 = """
<div style="background-color:#6BD5DA;padding:15px;border-radius:15px 15px 15px 15px;border-style:'solid';border-color:black">
<center><h5>‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h5></center>
</div>
"""
st.markdown(html_8, unsafe_allow_html=True)
st.markdown("")

st.subheader("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô")
A1 = st.number_input("‡∏≠‡∏≤‡∏¢‡∏∏")
A2 = st.number_input("‡πÄ‡∏û‡∏® (‡∏ä‡∏≤‡∏¢=1 ‡∏´‡∏ç‡∏¥‡∏á=0)")
A3 = st.number_input("‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏ö‡πà‡∏≠‡∏¢ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A4 = st.number_input("‡∏Å‡∏£‡∏∞‡∏´‡∏≤‡∏¢‡∏ô‡πâ‡∏≥ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A5 = st.number_input("‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏•‡∏î‡∏•‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A6 = st.number_input("‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A7 = st.number_input("‡∏´‡∏¥‡∏ß‡∏ö‡πà‡∏≠‡∏¢ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A8 = st.number_input("‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤‡πÉ‡∏ô‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞‡πÄ‡∏û‡∏® (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A9 = st.number_input("‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏û‡∏£‡πà‡∏≤‡∏°‡∏±‡∏ß (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A10 = st.number_input("‡∏Ñ‡∏±‡∏ô (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A11 = st.number_input("‡∏´‡∏á‡∏∏‡∏î‡∏´‡∏á‡∏¥‡∏î‡∏á‡πà‡∏≤‡∏¢ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A12 = st.number_input("‡πÅ‡∏ú‡∏•‡∏´‡∏≤‡∏¢‡∏ä‡πâ‡∏≤ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A13 = st.number_input("‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A14 = st.number_input("‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ï‡∏∂‡∏á (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A15 = st.number_input("‡∏ú‡∏°‡∏£‡πà‡∏ß‡∏á (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A16 = st.number_input("‡πÇ‡∏£‡∏Ñ‡∏≠‡πâ‡∏ß‡∏ô (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")



if st.button("‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•"):
    X = dt.drop('class', axis=1)
    y = dt['class']

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Naive Bayes
    nb_model = GaussianNB()
    nb_model.fit(X, y)

    x_input = np.array([[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16]])
    out = nb_model.predict(x_input)

    st.write(out)  # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• raw (0 ‡∏´‡∏£‡∏∑‡∏≠ 1)

    if out[0] == 1:
        st.success("‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")
        st.image("./img/b3.jpg")
    else:
        st.success("‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô")
        st.image("./img/b5.jpg")
else:
    st.write("‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢")
