from sklearn.neighbors import KNeighborsClassifier
import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from streamlit_lottie import st_lottie
import requests

# ====== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î Lottie ======
def load_lottieurl(url: str):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()

# ====== ‡πÇ‡∏´‡∏•‡∏î Lottie ======
lottie_url_hello = "https://lottie.host/a6ba2cb1-4445-4e24-b0c0-29c910e30d35/siFuTj6Dck.json"
lottie_hello = load_lottieurl(lottie_url_hello)

st.title('‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô K-Nearest Neighbor')

# ----------------- Layout -----------------
col1, col2 = st.columns(2)
with col1:
   st.image("./img/b2.jpg")
with col2:
   st.image("./img/b4.jpg")

# ----------------- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• -----------------
html_7 = """
<div style="background-color:#33beff;padding:15px;border-radius:15px;
            border-style:'solid';border-color:black">
<center><h4>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</h4></center>
</div>
"""
st.markdown(html_7, unsafe_allow_html=True)

dt = pd.read_csv("./data/Diabetes.csv")
dt = dt.replace({
    'Yes': 1, 'No': 0,
    'Male': 1, 'Female': 0,
    'Positive': 1, 'Negative': 0
})

st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å 10 ‡πÅ‡∏ñ‡∏ß")
st.write(dt.head(10))
st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ 10 ‡πÅ‡∏ñ‡∏ß")
st.write(dt.tail(10))

st.subheader("üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
st.write(dt.describe())

# ----------------- Visualization -----------------
st.subheader("üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
feature = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå", dt.columns[:-1])

st.write(f"### üéØ Boxplot: {feature} ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ú‡∏•‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô")
fig, ax = plt.subplots()
sns.boxplot(data=dt, x='class', y=feature, ax=ax)
st.pyplot(fig)

if st.checkbox("‡πÅ‡∏™‡∏î‡∏á Pairplot (‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢)"):
    st.write("### üå∫ Pairplot: ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    fig2 = sns.pairplot(dt, hue='class')
    st.pyplot(fig2)

# ----------------- ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ -----------------
html_8 = """
<div style="background-color:#6BD5DA;padding:15px;border-radius:15px;
            border-style:'solid';border-color:black">
<center><h5>‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h5></center>
</div>
"""
st.markdown(html_8, unsafe_allow_html=True)
st.markdown("")

st.subheader("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô")
A1 = st.number_input("‡∏≠‡∏≤‡∏¢‡∏∏")
A2 = st.number_input("‡πÄ‡∏û‡∏® (‡∏ä‡∏≤‡∏¢=1 ‡∏´‡∏ç‡∏¥‡∏á=0)")
A3 = st.number_input("‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏ö‡πà‡∏≠‡∏¢ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A4 = st.number_input("‡∏Å‡∏£‡∏∞‡∏´‡∏≤‡∏¢‡∏ô‡πâ‡∏≥ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A5 = st.number_input("‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏•‡∏î‡∏•‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A6 = st.number_input("‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A7 = st.number_input("‡∏´‡∏¥‡∏ß‡∏ö‡πà‡∏≠‡∏¢ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A8 = st.number_input("‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤‡πÉ‡∏ô‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞‡πÄ‡∏û‡∏® (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A9 = st.number_input("‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏û‡∏£‡πà‡∏≤‡∏°‡∏±‡∏ß (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A10 = st.number_input("‡∏Ñ‡∏±‡∏ô (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A11 = st.number_input("‡∏´‡∏á‡∏∏‡∏î‡∏´‡∏á‡∏¥‡∏î‡∏á‡πà‡∏≤‡∏¢ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A12 = st.number_input("‡πÅ‡∏ú‡∏•‡∏´‡∏≤‡∏¢‡∏ä‡πâ‡∏≤ (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A13 = st.number_input("‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A14 = st.number_input("‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ï‡∏∂‡∏á (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A15 = st.number_input("‡∏ú‡∏°‡∏£‡πà‡∏ß‡∏á (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")
A16 = st.number_input("‡πÇ‡∏£‡∏Ñ‡∏≠‡πâ‡∏ß‡∏ô (‡πÉ‡∏ä‡πà=1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà=0)")

if st.button("‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•"):
   #st.write("‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢")
   #dt = pd.read_csv("./data/iris-3.csv") 
   X = dt.drop('class', axis=1)
   y = dt['class']

   Knn_model = KNeighborsClassifier(n_neighbors=3)
   Knn_model.fit(X, y)  
    
   x_input = np.array([[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16]])
   st.write(Knn_model.predict(x_input))
   
   out=Knn_model.predict(x_input)

   if out[0] == 1:
    st.success("‚ö†Ô∏è‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (ÔΩ°≈èÔπè≈è)")
    st.image("./img/b3.jpg")
   else:
    st.success("‚úÖ‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô (‚âß‚ñΩ‚â¶)")
    st.image("./img/b5.jpg")
    if lottie_hello:
        st_lottie(lottie_hello, height=250, key="hello")

else:
    st.write("‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢")